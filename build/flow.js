// Generated by CoffeeScript 1.3.3
(function() {
  var Coords, Flow;

  Coords = (function() {

    function Coords(start_x, start_y, box_w, box_h, box_distance) {
      this.start_x = start_x;
      this.start_y = start_y;
      this.box_w = box_w;
      this.box_h = box_h;
      this.box_distance = box_distance;
    }

    Coords.prototype.getConnectionStartX = function() {
      return this.start_x + this.box_w;
    };

    Coords.prototype.getConnectionStartY = function() {
      return this.start_y + (this.box_h / 2);
    };

    Coords.prototype.getConnectionDrawX = function() {
      return this.box_distance - this.box_w;
    };

    Coords.prototype.getBoxCenterX = function() {
      return this.start_x + (this.box_w / 2);
    };

    Coords.prototype.getBoxCenterY = function() {
      return this.start_y + (this.box_h / 2);
    };

    Coords.prototype.recalculate = function(iteration) {
      this.start_x = this.start_x + this.box_distance;
      return this.start_y = this.start_y + (150 * iteration);
    };

    return Coords;

  })();

  Flow = (function() {

    function Flow(html_id, width, height) {
      this.html_id = html_id;
      this.width = width;
      this.height = height;
      this.paper = Raphael(this.html_id, this.width, this.height);
      this.data = new Array;
    }

    Flow.prototype.addData = function(data) {
      var d, _i, _len, _results;
      _results = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        d = data[_i];
        _results.push(this.data.push(d));
      }
      return _results;
    };

    Flow.prototype.draw = function() {
      var coords, i, item, _i, _len, _ref;
      coords = new Coords(50, 50, 80, 80, 150);
      _ref = this.data;
      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
        item = _ref[i];
        this.drawItem(coords, item, this.paper);
        coords.recalculate(i);
      }
    };

    Flow.prototype.drawItem = function(coords, item, paper) {
      var c, connections, i, item_rect, text, _i, _len;
      item_rect = paper.rect(coords.start_x, coords.start_y, coords.box_w, coords.box_h);
      if (item.colour) {
        item_rect.attr("fill", item.colour);
      }
      connections = item.connections;
      text = paper.text(coords.getBoxCenterX(), coords.getBoxCenterY(), item.name);
      if (connections.length > 0) {
        paper.path("M " + (coords.getConnectionStartX()) + " " + (coords.getConnectionStartY()) + " l " + (coords.getConnectionDrawX()) + " 0").attr({
          "arrow-end": "classic-wide-long",
          "stroke-width": 2
        });
      }
      for (i = _i = 0, _len = connections.length; _i < _len; i = ++_i) {
        c = connections[i];
        coords.recalculate(i);
        this.drawItem(coords, c, paper);
      }
    };

    return Flow;

  })();

  window.Flow = Flow;

}).call(this);
